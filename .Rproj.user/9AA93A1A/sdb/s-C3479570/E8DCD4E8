{
    "collab_server" : "",
    "contents" : "# Set working directory to the source file's location.\n\nrm(list=ls())\n\nsource(\"Rawks.R\")\n\n## Constants\n\nall.files <- list.files(path = \"data/ratings data\", full.names = T)\n\nthe.files <- all.files[1:2]\n\nthe.filter = NULL\nthe.variables = \".\"\ninclude.filename = T\nfile.header = \"file\"\nenvir = .GlobalEnv\nand.symbol = \"&\"\nor.symbol = \"|\"\nin.symbol = \"%in%\"\nnin.symbol = \"%nin%\"\nequation.symbols = c(\">\", \">=\", \"<\", \"<=\", \"!=\", \"==\")\nnum.files.per.batch = 1000\ntf <- TRUE\nreturn.as = \"result\"\nshow.warnings = FALSE\nnrows = Inf\nreturn.data.table = TRUE\ndrop = NULL\n\n## Variables for pattern.fread\nnegations = FALSE\nconnectors = \"or\"\n\n## Read in a combined data set from all of the files.  Note that this includes a column called file to provide the source of each row.\ncombined.fread(the.files = the.files)\n\n# Equivalently\nfiltered.fread(the.files = the.files, the.filter = NULL)\n\n# Read in only the first 10 rows\nfiltered.fread(the.files = the.files, nrows = 10)\n\n\n\n# Note that combined.fread is a wrapper of filtered.fread that specifically sets the.filter = NULL.\n\n## Only show the code for reading the files by setting return.as = \"code\"\nfiltered.fread(the.files = the.files, return.as = \"code\")\n\n## Show both the code and the results by setting return.as = \"all\"\nfiltered.fread(the.files = the.files, return.as = \"all\")\n\n\n\n## Change the name of the file column to any name you want:\nfiltered.fread(the.files = the.files, file.header = \"the source\")\n\n## Don't include the name of the file\nfiltered.fread(the.files = the.files, include.filename = F)\n\n## Write filtering language in R's syntax\nfiltered.fread(the.files = the.files, the.filter = \"rating == 5\")\n\n# Pick the variables\nfiltered.fread(the.files = the.files, the.filter = \"rating == 5\", the.variables = c(\"user\", \"rating\"), include.filename = F)\n\n\n# Demonstrates the & operator.\nfiltered.fread(the.files = the.files, the.filter = \"rating >= 3 & item == '6opmPfANUHJH121e'\")\n\n# Note that the outside quotes should not match the inside quotes.\nfiltered.fread(the.files = the.files, the.filter = 'rating >= 3 & item == \"6opmPfANUHJH121e\"')\n\n\n# Demonstrates the | operator\nfiltered.fread(the.files = the.files, the.filter = 'rating == 3 | rating == 4')\n\n# Demonstrates the ! operator\n\nfiltered.fread(the.files = the.files, the.filter = 'rating != 1 & rating != 2 & rating != 3 & rating != 4')\n\n\n# Demonstrates the %in% operator\nfiltered.fread(the.files = the.files, the.filter = 'rating >= 3 & item %in% c(\"6opmPfANUHJH121e\", \"bUMM5vrlBq0ypVgW\")', return.as = \"code\")\n\n# Pass filtering statements involving other variables defined in R.\ntwo.items <- c(\"6opmPfANUHJH121e\", \"bUMM5vrlBq0ypVgW\")\nfiltered.fread(the.files = the.files, the.filter = 'rating >= 3 & item %in% two.items', return.as = \"code\")\n\n# Demonstrates the %nin% operator\nfiltered.fread(the.files = the.files, the.filter = 'rating %nin% c(1:2, 4)')\n\n# Read all variables with \".\"\nfiltered.fread(the.files = the.files, the.filter = 'rating >= 3 & item %in% two.items', the.variables = \".\", include.filename = F)\n\n\n# Read only a subset of the variables\nfiltered.fread(the.files = the.files, the.filter = 'rating >= 3 & item %in% two.items', the.variables = c(\"user\", \"rating\"), include.filename = F)\n\n\nfiltered.fread(the.files = the.files, the.filter = 'rating >= 3 & item %in% two.items', the.variables = c(\"user\", \"rating\"), include.filename = F)\n\n\n# Read the data in batches of size 100 and then combine.  Note that the batches are only required if the length of the AWK coding statement is too long.  Note that show.warnings = F will use suppressWarnings() to remove warning statements.  Any batch of files with no cases matching the.filter's inclusion criteria would otherwise generate a warning message.\n\nfiltered.fread(the.files = all.files, the.filter = 'rating >= 4 & item %in% two.items', include.filename = T, num.files.per.batch = 100, show.warnings = F)\n\n\n# Note that these are using variables in R to define the.filter.  The program will locate these variables and translate to their values (e.g. \"6opmPfANUHJH121e\") for using in reading and filtering the data.\nfiltered.fread(the.files = all.files, the.filter = \"rating >= 4 & item == two.items[1]\")\n\n\n\nfiltered.fread(the.files = the.files, the.filter = 'rating >= 4 & item %in% two.items', include.filename = T, num.files.per.batch = 1, show.warnings = F, return.as = \"code\")\n\n\n########## Testing pattern.fread\n\n## Matching any row with a pattern\n\npattern.fread(the.files = the.files, the.patterns = c(\"PfANUH\"))\n\n\npattern.fread(the.files = the.files, the.patterns = c(\"PfANUH\"), tf = c(F), return.as = \"result\")\n\npattern.fread(the.files = the.files, the.patterns = c(\"PfANUH\"), tf = c(F), return.as = \"code\")\n\npattern.fread(the.files = the.files, the.patterns = c(\"kT27T\", \"wBMJkot\"), connectors = \"and\", return.as = \"result\")\n\n\npattern.fread(the.files = all.files, the.patterns = c(\"WuwhZcby\", \"6opmPfANUHJH121e\"), connectors = c(\"and\"), include.filename = F, show.warnings = F)\n\n\n\npattern.fread(the.files = \"Data/Titanic.csv\", the.patterns = c(\"Female\", \"Child\", \"1st\"), tf = c(T, T, F), connectors = \"and\")\n\n\n",
    "created" : 1621614765143.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "262081779",
    "id" : "E8DCD4E8",
    "lastKnownWriteTime" : 1621616897,
    "last_content_update" : 1621616897613,
    "path" : "~/Downloads/examples.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}